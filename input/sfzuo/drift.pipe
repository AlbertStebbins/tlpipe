# -*- mode: python; -*-

# input file for pipeline manager
# execute this pipeline by either command of the following two:
# tlpipe dir/to/drift.pipe
# mpiexec -n N tlpipe dir/to/drift.pipe


pipe_tasks = []
pipe_logging = 'notset'
# pipe_logging = 'info'


import glob
data_dir = '/data_tmp/disk6_mirror/SunCygnusA_20160603190723_20160606080722'
files = sorted(glob.glob(data_dir+'/*.hdf5'))[1:]


from tlpipe.timestream import dispatch
pipe_tasks.append(dispatch.Dispatch)
### parameters for Dispatch
dp_input_files = files
dp_freq_select = (200, 210)
# dp_feed_select = (0, 9)
dp_feed_select = [1, 2, 3, 4, 6, 8, 9, 10, 16]
# dp_feed_select = [1, 2, 3, 4, 6, 8, 9, 10, 13, 14, 15, 16]
dp_exclude_bad = False
dp_iter_num = 1
dp_out = 'dp'

from tlpipe.timestream import run_info
pipe_tasks.append(run_info.RunInfo)
### parameters for RunInfo
ri_in = dp_out
ri_out = 'ri'


from tlpipe.timestream import detect_ns
pipe_tasks.append(detect_ns.Detect)
### parameters for Detect
dt_in = ri_out
# dt_feed = 1
dt_out = 'dt'

from tlpipe.timestream import line_rfi
# pipe_tasks.append(line_rfi.Flag)
### parameters for Flag
lf_in = dt_out
# lf_window_size = 21
# lf_sigma = 3.0
lf_out = 'lf'

from tlpipe.timestream import ns_cal
pipe_tasks.append(ns_cal.NsCal)
### parameters for NsCal
nc_in = dt_out
# nc_plot_phs = True
# nc_fig_name = 'phs/phs_change'
nc_out = 'nc'

from tlpipe.plot import plot_waterfall
pipe_tasks.append(plot_waterfall.PlotRawTimestream)
### parameters for PlotRawTimestream
prt_in = nc_out
# prt_in = dt_out
# prt_bl_incl = [(i, i) for i in range(1, 33)]
prt_flag_ns = True
prt_fig_name = 'rvis/vis'
prt_out = 'prt'


from tlpipe.timestream import rt2ts
pipe_tasks.append(rt2ts.Rt2ts)
### parameters for Rt2ts
r2t_in = nc_out
# r2t_in = dt_out
r2t_out = 'r2t'

from tlpipe.timestream import ps_fit
pipe_tasks.append(ps_fit.PsFit)
### parameters for PsFit
pf_in = r2t_out
pf_calibrator = 'cyg'
pf_plot_fit = True
pf_fig_name = 'fit/fit'
pf_out = 'pf'

from tlpipe.plot import plot_waterfall
pipe_tasks.append(plot_waterfall.PlotTimestream)
### parameters for PlotTimestream
pts_in = pf_out
pts_flag_ns = False
pts_fig_name = 'vis/vis'
pts_out = 'pts'

from tlpipe.timestream import re_order
pipe_tasks.append(re_order.ReOrder)
### parameters for ReOrder
ro_in = pf_out
ro_output_files = [ 're_order/file_%d.hdf5' %i for i in range(1, 13) ]
ro_out = 'ro'

from tlpipe.timestream import map_making
pipe_tasks.append(map_making.MapMaking)
### parameters for MapMaking
mm_in = ro_out
mm_input_files = ro_output_files
mm_mask_time_range = [6.5, 24.0]
mm_beam_theta_range = [30.0, 60.0]
mm_auto_correlations = False
mm_pol = 'yy'
mm_noise_weight = False
mm_out = 'mm'
